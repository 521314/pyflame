.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH PYFLAME 1 "OCTOBER 2016" Linux "User Manuals"
.SH NAME
pyflame \- A Ptracing Profiler For Python
.SH SYNOPSIS
.B pyflame [options]
.I PID

.B pyflame [-t|--trace] [options]
.I command arg1 arg2...
.SH DESCRIPTION
.B pyflame
profiles a Python process using
.BR ptrace (2)
to extract the stack trace. There are two modes. In the default mode
.B pyflame
will attach to a running process to get profiling data. If, instead, the
.B -t
or
.B --trace
options are given,
.B pyflame
will instead run a command and trace it to completion.

Since
.B pyflame
is implemented using
.BR ptrace (2)
it has the same permissions model as programs like
.BR strace (1)
or
.BR gdb (1)
.
.SH OPTIONS
.TP
.BR \-h ", " \-\-help
Display help.
.TP
.BR \-s ", " \-\-seconds
Run the profiler for this many seconds.
.TP
.BR \-r ", " \-\-rate
Sample the process at this frequency. This should be a fractional value in seconds, so
.B -r 0.001
would mean to sample the process 1000 times a second, i.e. once every millisecond.
.TP
.BR \-t ", " \-\-trace
Run pyflame in trace mode.
.TP
.BR \-T ", " \-\-timestamp
Print the timestamp for each stack. This is useful for generating "flame chart" profiles.
.TP
.BR \-v ", " \-\-version
Print the version.
.TP
.BR \-x ", " \-\-exclude-idle
Exclude "idle" time.
.SH BUGS
If you find them, please report them on GitHub!
.SH AUTHOR
Evan Klitzke <evan@eklitzke.org>
